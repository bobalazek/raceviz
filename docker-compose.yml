version: '3.7'

services:
  php:
    container_name: rv_php
    build: ./docker/php
    env_file:
      - .env
    volumes:
      - ./web:/var/www/web
    links:
      - mysql
      - redis
    depends_on:
      - mysql
    networks:
      - rv-app-network

  nginx:
    container_name: rv_nginx
    build: ./docker/nginx
    volumes:
      - ./web:/var/www/web
    links:
      - php
    depends_on:
      - php
    networks:
      - rv-app-network
    ports:
      - '${NGINX_PORT_80:-80}:80'
      - '${NGINX_PORT_443:-443}:443'

  mysql:
    container_name: rv_mysql
    build: ./docker/mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE:-database}
      - MYSQL_USER=${MYSQL_USER:-user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-password}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-password}
    volumes:
      - mysql-volume:/var/lib/mysql
    networks:
      - rv-app-network

  mysql-test:
    container_name: rv_mysql_test
    build: ./docker/mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE:-database}
      - MYSQL_USER=${MYSQL_USER:-user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-password}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-password}
    volumes:
      - mysql-test-volume:/var/lib/mysql
    networks:
      - rv-app-network

  node:
    container_name: rv_node
    build: ./docker/node
    env_file:
      - .env
    volumes:
      - ./web:/usr/src/web
    networks:
      - rv-app-network

  ws:
    container_name: rv_ws
    build: ./docker/ws
    env_file:
      - .env
    volumes:
      - ./ws:/usr/src/web
    networks:
      - rv-app-network
    ports:
      - '${WS_PORT_8080:-8080}:8080'

  redis:
    container_name: rv_redis
    image: redis
    volumes:
      - redis-volume:/data
    networks:
      - rv-app-network

  smtp-server:
    container_name: rv_smtp_server
    image: namshi/smtp
    networks:
      - rv-app-network

networks:
  rv-app-network:
    name: rv_app_network
    driver: bridge

volumes:
  mysql-volume:
  mysql-test-volume:
  redis-volume:
